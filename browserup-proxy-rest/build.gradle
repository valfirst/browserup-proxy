plugins {
    id 'groovy'
    id 'java-library'
    id 'signing'
}

archivesBaseName = 'browserup-proxy-rest'

publishing {
    repositories {
        maven {
            name 'Maven'
            url project.version.endsWith("-SNAPSHOT") ?
                'https://oss.sonatype.org/content/repositories/snapshots/' :
                'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword")) {
                credentials {
                    username "$ossrhUsername"
                    password "$ossrhPassword"
                }
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            groupId "${project.group}"
            artifactId "${project.name}"
            from components.java

            pom {
                name = archivesBaseName
                description = 'BrowserUp Proxy - REST'
                url = 'https://github.com/valfirst/browserup-proxy'
                packaging = 'jar'

                scm {
                    connection = 'scm:git:git@github.com:valfirst/browserup-proxy.git'
                    developerConnection = 'scm:git:git@github.com:valfirst/browserup-proxy.git'
                    url = 'https://github.com/valfirst/browserup-proxy/tree/main/browserup-proxy-rest'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'valfirst'
                        name = 'Valery Yatsynovich'
                        email = 'valeryyatsynovich@gmail.com'
                    }
                }
            }
        }
    }
}

dependencies {
    implementation project(':browserup-proxy-core')

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.google.inject:guice:${guiceVersion}"
    implementation "com.google.inject.extensions:guice-servlet:${guiceVersion}"
    implementation('com.google.sitebricks:sitebricks:0.8.11') {
        exclude(group: 'org.jboss.netty', module: 'netty')
        exclude(module: 'validation-api')
        exclude(group: 'com.google.inject.extensions', module: 'guice-multibindings')
    }
    implementation "io.netty:netty-all:${nettyVersion}"
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    implementation 'org.apache.commons:commons-lang3:3.17.0'

    implementation "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
    implementation "org.glassfish.jersey.ext:jersey-bean-validation:${jerseyVersion}"

    implementation "io.swagger.core.v3:swagger-jaxrs2:${swaggerVersion}"
    implementation "io.swagger.core.v3:swagger-core:${swaggerVersion}"
    implementation "io.swagger.core.v3:swagger-integration:${swaggerVersion}"
    implementation "io.swagger.core.v3:swagger-jaxrs2-servlet-initializer:${swaggerVersion}"
    implementation "io.swagger.core.v3:swagger-models:${swaggerVersion}"

    testImplementation project(':browserup-proxy-mitm')

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4jVersion}"
    testImplementation "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.23'
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testImplementation "org.hamcrest:hamcrest:${hamcrestVersion}"
    testImplementation 'org.mockito:mockito-core:5.16.0'
    testImplementation "org.seleniumhq.selenium:selenium-api:${seleniumVersion}"
    testImplementation 'org.awaitility:awaitility:4.3.0'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
}

signing {
    if (project.hasProperty('sign')) {
        sign publishing.publications.mavenJava
    }
}

tasks.register('createVersionProperties') {
    doLast {
        new File("$buildDir/resources/main/browserup-proxy-rest-version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

build.finalizedBy(createVersionProperties)
