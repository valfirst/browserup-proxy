buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath(group: 'org.jreleaser', name: 'org.jreleaser.gradle.plugin', version: '1.20.0')
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jreleaser'

    group = 'com.github.valfirst.browserup-proxy'
    version = '3.2.2-SNAPSHOT'

    sourceCompatibility=11

    ext {
        bcpVersion = '1.82'
        guiceVersion = '6.0.0'
        jerseyVersion = '2.46'
        jettyVersion = '9.4.58.v20250814'
        log4jVersion = '2.25.2'
        nettyVersion = '4.2.4.Final'
        littleProxyVersion = '2.4.5'
        slf4jVersion = '2.0.17'
        swaggerVersion = '2.2.26'
        guavaVersion = '33.5.0-jre'
        seleniumVersion = '4.33.0'
        hamcrestVersion = '3.0'
    }

    dependencies {
        modules {
            module('commons-logging:commons-logging') {
                replacedBy('org.slf4j:jcl-over-slf4j', 'Redirect commons-logging logs to SLF4J')
            }
        }
    }

    repositories {
        mavenCentral()
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    test {
        testLogging {
            outputs.upToDateWhen {false}
            showStandardStreams = true
        }
        def mitmproxyBinaryPath = project.findProperty('MITMPROXY_BINARY_PATH')
        if (mitmproxyBinaryPath) {
            systemProperty "MITMPROXY_BINARY_PATH", mitmproxyBinaryPath
        }
    }

    jreleaser {
        signing {
            active = 'ALWAYS'
            armored = true
        }
        deploy {
            maven {
                mavenCentral {
                    sonatype {
                        active = 'ALWAYS'
                        url = 'https://central.sonatype.com/api/v1/publisher'
                        stagingRepository('build/staging-deploy')
                    }
                }
            }
        }
    }
}
