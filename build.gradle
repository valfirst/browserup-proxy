configurations.all {
    resolutionStrategy {
        // TODO Temporarily forcing guava to version 19 because upstream consumers
        // do not support above 19, such as apache zookeeper curator framework.
        // BUT ... Version 22 is needed for BrowserUpProxy, because
        // it uses org.littleshoot.proxy.impl.ProxyToServerConnection.addressFor
        // which calls com.google.common.net.HostAndPort.getHost(),
        // which is not in 19.
        // https://github.com/lightbody/BrowserMob-proxy/issues/638
        // https://github.com/lightbody/BrowserMob-proxy/issues/398
        // .....
        // UPDATE Jan 21 2019: I'm upgrading to Guava 22, and will sort out upstream Minion
        // conflicts later. BrowserUpDriver _should_ be allowed to use whatever libs it wants.
        //resolutionStrategy.force 'com.google.guava:guava:*', 'com.google.guava:guava:22.0'
        // UPDATE Jan 27, 2019: I forked org.littleshoot.proxy to Browserup and upgraded it to Guava 27.0.1-jre
        resolutionStrategy.force 'com.google.guava:guava:*', "com.google.guava:guava:${guavaVersion}"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'signing'

    group = 'com.github.valfirst.browserup-proxy'
    version = '2.2.17-SNAPSHOT'

    sourceCompatibility=1.8

    ext {
        bcpVersion = '1.78.1'
        guiceVersion = '4.2.3'
        jacksonVersion = '2.17.0'
        jerseyVersion = '2.42'
        jettyVersion = '9.4.53.v20231009'
        log4jVersion = '2.23.1'
        nettyVersion = '4.1.109.Final'
        littleProxyVersion = '2.0.22'
        slf4jVersion = '2.0.13'
        swaggerVersion = '2.2.21'
        guavaVersion = '33.1.0-jre'
        seleniumVersion = '4.13.0'
        hamcrestVersion = '2.2'
    }

    dependencies {
        modules {
            module('commons-logging:commons-logging') {
                replacedBy('org.slf4j:jcl-over-slf4j', 'Redirect commons-logging logs to SLF4J')
            }
        }
    }

    // Workaround for Guava: https://github.com/google/guava/releases/tag/v32.1.0
    sourceSets.all {
        configurations.getByName(runtimeClasspathConfigurationName) {
            attributes.attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
        }
        configurations.getByName(compileClasspathConfigurationName) {
            attributes.attribute(Attribute.of("org.gradle.jvm.environment", String), "standard-jvm")
        }
    }
    // End of workaround for Guava

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/service/local/staging/deploy/maven2/" }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        if (project.hasProperty("sign")) {
            sign configurations.archives
        }
    }

    test {
        testLogging {
            outputs.upToDateWhen {false}
            showStandardStreams = true
        }
        def mitmproxyBinaryPath = project.findProperty('MITMPROXY_BINARY_PATH')
        if (mitmproxyBinaryPath) {
            systemProperty "MITMPROXY_BINARY_PATH", mitmproxyBinaryPath
        }
    }
}
